class {{ name.upper_camel_case }}(Enum):
    """
 {{ indent(enum_description, 1) }}

     Values
     ------
     {% for value in values -%}
     {{ value.name.uppercase }}
         {{ value.description }}
     {% endfor -%}
   """

    {% for value in values %}
    {{ value.name.uppercase }} = {{ loop.index - 1 }}
    {%- endfor %}

    def translate_to_rpc(self, rpc{{ name.upper_camel_case }}):
        return {
            {%- for value in values %}
                {{ loop.index - 1 }}: {{ plugin_name.lower_snake_case }}_pb2{% if parent_struct is not none %}.{{ parent_struct.upper_camel_case }}{% endif %}.{{ value.name.uppercase }}{% if not loop.last %},{% endif %}
            {%- endfor %}
            }.get(self.value, None)

    @staticmethod
    def translate_from_rpc(rpc_enum_value):
        """ Parses a gRPC response """
        return {
            {%- for value in values %}
                {{ loop.index - 1 }}: {% if parent_struct is not none %}{{ parent_struct.upper_camel_case }}.{% endif %}{{ name.upper_camel_case }}.{{ value.name.uppercase }},
            {%- endfor %}
            }.get(rpc_enum_value, None)

    def __str__(self):
        return self.name
